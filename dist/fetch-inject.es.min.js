/*! Fetch Inject v0.0.0-development | Â© 2018, 13AMDq9isKtQTxMQG4w7Yo7cEhqKAqQ4Lz | @license BTC */
var head=function(e,t,n,r,o,i,c){i=t.createElement(n),c=t.getElementsByTagName(n)[0],i.appendChild(t.createTextNode(r.text)),i.onload=o(r),c?c.parentNode.insertBefore(i,c):t.head.appendChild(i)},fetchInject=function(e,t){if(!e||!Array.isArray(e))return Promise.reject(new TypeError("`inputs` must be an array"));if(t&&!(t instanceof Promise))return Promise.reject(new TypeError("`promise` must be a promise"));var n=[],r=t?[].concat(t):[],o=[];return e.forEach(function(e){return r.push(window.fetch(e).then(function(e){return[e.clone().text(),e.blob()]}).then(function(e){return Promise.all(e).then(function(e){n.push({text:e[0],blob:e[1]})})}))}),Promise.all(r).then(function(){return n.forEach(function(e){o.push({then:function(t){e.blob.type.includes("text/css")?head(window,document,"style",e,t):head(window,document,"script",e,t)}})}),Promise.all(o)})};export default fetchInject;
